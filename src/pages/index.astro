---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Form from "../components/Form.astro";
import { Image } from "astro:assets";
import logo from "../images/logo-reverse.png";

import oceansunrise from "../images/ocean-sunrise.mp4";
import drGreg from "../images/greg.jpg";
---

<Layout
	page="home"
	title="Fenix Therapeutic Services | Gregory Harmeling, Psy.D. "
>
	<main class="wrapper">
		<section class="hero p-group intro-screen" id="intro">
			<video autoplay loop muted playsinline class="video">
				<source src={oceansunrise} />
			</video>
			<div class="viewport-header">
				<h1>
					<Image class="logo" src={logo} alt="Fenix Therapeutic Services" />
				</h1>
				<h2>
					Welcome to Fenix Therapeutic Services, where your journey to healing
					and personal growth begins.
				</h2>
			</div>
		</section>
		<section id="about" class="section p-group">
			<div class="p-layer base-layer about-grid">
				<h2>About Fenix Therapeutic Services</h2>
				<div>
					<Image src={drGreg} alt="Gregory Harmeling, Psy.D." />
					<p>
						Fenix Therapeutic Services is the online practice of Dr. Gregory
						Harmeling, Psy.D., a Licensed Marriage and Family Therapist with
						over a decade of experience, dedicated to helping individuals
						navigate their mental health challenges with compassion and empathy.
						<a href="/about">Read more</a>
					</p>
				</div>
			</div>
		</section>
		<section id="practice" class="section p-group">
			<div class="p-layer mid-layer practice-grid">
				<article>
					<h2>Areas of Practice</h2>
					<p>
						Fenix Therapeutic Services specializes in the following areas of
						therapy:
					</p>
					<ul role="list" class="link-card-grid hidden">
						<Card
							title="Cognitive Behavioral Therapy (CBT)"
							topic="CBT"
							link="/practice#cbt"
						/>
						<Card title="Solution-Focused Therapy (SFT)" topic="SFT" link="" />
						<Card
							title="Trauma Informed Therapy"
							topic="Trauma-informed Therapy"
							link="/practice#trauma-informed"
						/>
						<Card
							title="Trauma-Informed CBT"
							topic="Trauma-informed CBT"
							link=""
						/>
						<Card
							title="Certified Complex Trauma-Informed Therapist (CCTP I/II)"
							topic="CCTP"
							link=""
						/>
						<Card
							title="Certified Narcissistic Abuse Treatment Clinician (NATC)"
							topic="NATC"
							link=""
						/>
						<Card
							title="Eye Movement Desensitization & Reprocessing (EMDR)"
							topic="EMDR"
							link=""
						/>
					</ul>
				</article>
			</div>
		</section>
		<section id="book" class="section p-group">
			<div class="p-layer top-layer">
				<div>
					<h2>Book a Session</h2>
					<p>
						Please fill out the form below. You should receive a reply within 24
						hours.
					</p>
					<Form />
				</div>
			</div>
		</section>
	</main>
</Layout>

<style lang="scss">
	:root {
		--headerOpacity: 1;
		--headerScale: 1;
	}
	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}
	main {
		margin: auto;
		padding: 0;
		line-height: 1.6;
	}
	.container {
		width: 100%;
		//max-width: calc(100% - 2rem);
		margin: 0 auto;
	}
	section {
		padding: 1.5rem;
		@media (min-width: 1024px) {
			padding: 0 5rem;
		}
		h2 {
			text-align: center;
		}
	}
	.hero {
		background-image: url(../images/ocean-sunrise-frame-0m16s.jpg);
		background-size: cover;
		height: 100vh;
		width: 100vw;
		// position: absolute;
		// margin-bottom: 100px;
		max-height: 620px;
		@media (min-width: 1024px) {
			background-image: none;
			margin-bottom: 625px;
			position: absolute;
		}

		.video {
			display: none;
			@media (min-width: 1024px) {
				display: block;
				object-fit: cover;
				width: 100vw;
				height: 100vh;
				opacity: 0.5;
				position: fixed;
				top: 0;
				left: 0;
				z-index: -1;
			}
		}
		// .overlay {
		// 	position: absolute;
		// 	top: 0;
		// 	left: 0;
		// 	width: 100%;
		// 	height: 100%;
		// 	background: #64609b;
		// 	mix-blend-mode: overlay;
		// }
		.viewport-header {
			margin-top: 2rem;
			padding: 1rem;
			animation: 5s ease-in 0.5s 1 fadeIn;
			display: flex;
			align-items: center;
			justify-content: center;
			flex-direction: column;
			opacity: 1;
			opacity: var(--headerOpacity);
			transform: scale(var(--headerScale));
			@media (min-width: 1024px) {
				margin-top: 30rem;
			}

			h1 {
				display: flex;
				justify-content: center;
				.logo {
					width: 100%;
					height: auto;
					@media (min-width: 1024px) {
						width: 75%;
						max-width: 1000px;
					}
				}
			}
			h2 {
				text-align: center;
				@media (min-width: 1024px) {
					width: 1000px;
				}
			}
		}
	}
	.about-grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: 1.5rem;
		padding: 0;
		transition: all 3s ease-in;
		@media (min-width: 1024px) {
			margin: 0 10rem;
		}

		div {
			@media (min-width: 768px) {
				display: flex;
				align-items: flex-start;
			}
		}
		img {
			border: 2px solid #fff;
			box-shadow: 0 10px 6px -6px #666;
			width: 55%;
			height: auto;
			margin: 1.5rem auto;
			max-width: 265px;
			@media (min-width: 768px) {
				margin: 1.5rem 2rem 1.5rem auto;
			}
		}
		p {
			margin-bottom: 1.5rem;
			flex: 1;
			padding: 1rem;
			@media (min-width: 1024px) {
				max-width: 60%;
			}
		}
	}
	#practice {
		padding-left: 0;
		padding-right: 0;
		.practice-grid {
			background-image: url(../images/bg-practice.jpg);
			background-repeat: no-repeat;
			background-size: cover;
			article {
				font-weight: 500;
				padding: 5rem;
				> p {
					text-align: center;
					margin-bottom: 2rem;
				}
			}
		}
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: 1.5rem;
		margin-bottom: 2rem;
		padding: 0;
		transition: all 3s ease-in;
		@media (min-width: 768px) {
			grid-template-columns: repeat(2, 1fr);
		}
		@media (min-width: 1500px) {
			grid-template-columns: repeat(4, 1fr);
		}
	}
	#book {
		p,
		form {
			width: auto;
		}
		form {
			border: 2px solid #fff;
			border-radius: 6px;
			color: #fff;
			background: #3f3a7c;
			box-sizing: border-box;
			margin: 2rem auto;
			padding: 2rem;
			width: 100%;
			@media (min-width: 768px) {
				width: 50%;
			}
		}
	}

	@media (min-width: 1024px) {
		// parallax pieces
		.wrapper {
			height: 100vh;
			overflow-x: hidden;
			overflow-y: auto;
			perspective: 10px;
		}
		.wrapper::-webkit-scrollbar {
			// hide the inner scrollbar defined above for parallax
			display: none;
		}
		.intro-screen {
			height: 100vh;
			display: flex;
			justify-content: center;
			align-items: center;
		}
		.p-group {
			position: relative;
			height: 100vh;
			width: 100vw;
			transform-style: preserve-3d;
		}
		.p-layer {
			color: #fff;
			position: absolute;
			inset: 0;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;

			a {
				color: #fff;
			}

			// div {
			// 	width: 50%;
			// }
		}
		.base-layer {
			/* scale calculation: 1 + ((Z transform value * -1) / perspective) */
			transform: translateZ(-5px) scale(1.5);
		}
		.mid-layer {
			transform: translate(0);
		}
		.top-layer {
			transform: translateZ(-5px) scale(1.5);
		}
		#intro {
			z-index: 0;
		}
		#about {
			z-index: -1;
			img {
			}
			> .base-layer {
				background-color: #262161;
			}
		}
		#practice {
			margin-bottom: 315px;
			> .mid-layer {
				// background-image: url(../images/bg-practice.jpg);
				// background-repeat: no-repeat;
				// background-size: cover;
				// article {
				// 	color: #000;
				// 	font-weight: 500;
				// }
			}
		}
	}
</style>

<script>
	const target = document.querySelector("#about") as HTMLElement;
	const menuIcon = document.querySelector("#menu .icon") as HTMLElement;
	console.log(target);
	console.log(menuIcon);

	const options = {
		root: null,
		threshold: 0.3,
		rootMargin: "-100px",
	};

	function handleIntersection(entries: any[]) {
		entries.map((entry) => {
			if (entry.isIntersecting && screen.width > 1023) {
				menuIcon.classList.remove("hidden");
				menuIcon.classList.add("space-above");
				menuIcon.classList.add("animate");
			}
		});
	}

	const observer = new IntersectionObserver(handleIntersection, options);
	observer.observe(target);

	// const sections = document.querySelectorAll(".p-group");

	// function handleIntersection(entries: any[]) {
	// 	entries.map((entry) => {
	// 		if (entry.isIntersecting) {
	// 			entry.target.classList.add("visible");
	// 		} else {
	// 			entry.target.classList.remove("visible");
	// 		}
	// 	});
	// }

	// const observer = new IntersectionObserver(handleIntersection);

	// sections.forEach((section) => {
	// 	observer.observe(section);
	// });
</script>
